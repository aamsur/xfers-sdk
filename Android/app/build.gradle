/**
 * The module-level build.gradle file, located in each project/module/ directory,
 * allows you to configure build settings for the specific module it is located in.
 * Configuring these build settings allows you to provide custom packaging options,
 * such as additional build types and product flavors, and override settings in the main/
 * app manifest or top-level build.gradle file.
 */


/**
 * The first line in the build configuration applies the Android plugin for
 * Gradle to this build and makes the android block available to specify
 * Android-specific build options.
 */
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

/**
 * The android block is where you configure all your Android-specific
 * build options.
 */
android {
    /**
     * compileSdkVersion specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     */
    compileSdkVersion 28

    /**
     * The defaultConfig block encapsulates default settings and entries for all
     * build variants, and can override some attributes in main/AndroidManifest.xml
     * dynamically from the build system. You can configure product flavors to override
     * these values for different versions of your app.
     */
    defaultConfig {
        applicationId "com.xfers.xfers_sdk"
        minSdkVersion 15  // Defines the minimum API level required to run the app.
        targetSdkVersion 28  // Specifies the API level used to test the app.
        versionCode 1  // Defines the version number of your app.
        versionName "1.0"  // Defines a user-friendly version name for your app
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies Proguard settings and is not signed by default.
     */
    buildTypes {
        /**
         * By default, Android Studio configures the release build type to enable code
         * shrinking, using minifyEnabled, and specifies the Proguard settings file.
         */
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 * The dependencies block in the module-level build configuration file
 * specifies dependencies required to build only the module itself.
 * To learn more, go to https://developer.android.com/studio/build/dependencies
 */
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])  // Dependency on local binaries
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0' // Dependency on a remote binary
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation project(':xfers_sdk')  // Dependency on a local library module
}
