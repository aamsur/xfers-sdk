// Script that is used to deploy the SDK to bintray

// Setup:
// Create a keystore.gradle file with the following
// ext {
//     bintray_key = "bintray_key_from_JFrog_account"
// }

// NOTE: DO NOT COMMIT THE KEY TO GIT

// In order to deploy, do the following:
// 1. Change libVersion to the corresponding version based on semantic versioning
// 2. ./gradlew install
// 3. ./gradlew bintrayUpload

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
ext {
    // This configuration will result in:
    // compile '<groupId>:<artifactId>:<libVersion>'
    groupId = 'com.xfers.xfers_sdk' // package name of the project
    artifactId = "xfers_sdk" // module name of the library
    libVersion = "0.3.0"
}
version = libVersion
group = groupId
//take a look at https://github.com/bintray/gradle-bintray-plugin#buildgradle
bintray {
    try {
        user = BINTRAY_USER // Your bintray User
        key = BINTRAY_KEY // Defined in keystore.gradle file
        configurations = ['archives']
        publish = true //[Default: false] Whether version should be auto published after an upload
        override = false //[Default: false] Whether to override version artifacts already published
        // Package configuration. The plugin will use the repo and name properties to check if the
        // package already exists. In that case, there's no need to configure the other package
        // properties (like userOrg, desc, etc).
        pkg {
            repo = "xfers-android" //bintray repo
            name = "xfers_sdk" //bintray package
            licenses = ["MIT"]
            vcsUrl = "https://github.com/Xfers/xfers-sdk.git"
            version {
                name = libVersion
            }
        }
    } catch (ex) {
        throw new InvalidUserDataException("You should define BINTRAY_USER and BINTRAY_KEY in gradle.properties.")
    }
}
install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId groupId
            artifactId artifactId
            version libVersion
            name artifactId // pom.project.name must be same as bintray.pkg.name
        }
    }
}

//just copy paste the lines below
if (project.hasProperty("kotlin")) { //Kotlin libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka) {

    }
} else if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}